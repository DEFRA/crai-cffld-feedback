AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  cffld-feedback

Parameters:
  UploadedFeedbackBucketName:
    Type: String
    Description: "REQUIRED: Bucket containing uploaded raw feedback data"
  FeedbackTriageQueueName:
    Type: String
    Description: "REQUIRED: Queue for feedback triage"
  BedrockModelId:
    Type: String
    Description: "REQUIRED: Id for model within Bedrock service"
  PostgresDbName:
    Type: String
    Description: "REQUIRED: Database name for postgres"
  BedrockEmbeddingModelId:
    Type: String
    Description: "REQUIRED: Id for embedding model in bedrock"
  FeedbackMetadataTableName:
    Type: String
    Description: "REQUIRED: Name of the table to store feedback metadata"

Resources:
  IngestFeedbackXlsx:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/IngestFeedbackXlsx/ingest-xlsx.handler
      Runtime: nodejs20.x
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - '{{resolve:ssm:/cffld-feedback/sg/default}}'
        SubnetIds:
          - '{{resolve:ssm:/cffld-feedback/subnet/private/1}}'
          - '{{resolve:ssm:/cffld-feedback/subnet/private/2}}'
      Policies:
        - Statement:
            Sid: "comprehend"
            Effect: Allow
            Action:
              - comprehend:*
            Resource: "*"
        - S3ReadPolicy:
            BucketName: !Ref UploadedFeedbackBucketName
        - DynamoDBWritePolicy:
            TableName: !Ref FeedbackMetadataTableName
        - SQSSendMessagePolicy:
            QueueName: !Ref FeedbackTriageQueueName
      Events:
        S3NewObjectEvent:
          Type: S3
          Properties:
            Bucket: !Ref UploadedFeedbackBucket
            Events: s3:ObjectCreated:Put
            Filter:
              S3Key:
                Rules:
                  - Name: suffix
                    Value: .xlsx
      Environment:
        Variables:
          TRIAGE_QUEUE_URL: !Ref FeedbackTriageQueue

  TriageFeedback:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/TriageFeedback/triage-feedback.handler
      Runtime: nodejs20.x
      Timeout: 60
      VpcConfig:
        SecurityGroupIds:
          - '{{resolve:ssm:/cffld-feedback/sg/default}}'
        SubnetIds:
          - '{{resolve:ssm:/cffld-feedback/subnet/private/1}}'
          - '{{resolve:ssm:/cffld-feedback/subnet/private/2}}'
      Policies:
        - SQSSendMessagePolicy:
            QueueName: !Sub "${FeedbackTriageQueueName}-dlq"
        - Statement:
          - Effect: Allow
            Sid: InvokeModel1
            Action:
              - 'bedrock:InvokeModel'
            Resource:
              - 'arn:aws:bedrock:eu-central-1::foundation-model/*'
        - Statement:
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource:
              - '{{resolve:ssm:/cffld-feedback/postgres-secret-arn}}'
      Events:
        SQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt FeedbackTriageQueue.Arn
            BatchSize: 10
      Environment:
        Variables:
          TRIAGE_QUEUE_URL: !Ref FeedbackTriageQueue
          BEDROCK_MODEL_ID: !Ref BedrockModelId
          POSTGRES_SECRET_ID: '{{resolve:ssm:/cffld-feedback/postgres-secret-arn}}'
          POSTGRES_DB: !Ref PostgresDbName
          BEDROCK_EMBEDDING_MODEL_ID: !Ref BedrockEmbeddingModelId

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt IngestFeedbackXlsx.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 's3.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !GetAtt UploadedFeedbackBucket.Arn

  LambdaInvokePermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      FunctionName: !GetAtt TriageFeedback.Arn
      Action: 'lambda:InvokeFunction'
      Principal: 'sqs.amazonaws.com'
      SourceAccount: !Sub ${AWS::AccountId}
      SourceArn: !GetAtt FeedbackTriageQueue.Arn

  UploadedFeedbackBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref UploadedFeedbackBucketName
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - BucketKeyEnabled: true
      VersioningConfiguration:
        Status: Enabled
    
  FeedbackTriageQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Ref FeedbackTriageQueueName
      VisibilityTimeout: 120
      RedrivePolicy:
        deadLetterTargetArn: !GetAtt FeedbackTriageDeadLetterQueue.Arn
        maxReceiveCount: 10

  FeedbackTriageDeadLetterQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: !Sub "${FeedbackTriageQueueName}-dlq"
      VisibilityTimeout: 120

  FeedbackMetadataDynamoDbTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Ref FeedbackMetadataTableName
      AttributeDefinitions:
        - AttributeName: Service
          AttributeType: S
        - AttributeName: FeedbackId
          AttributeType: S
      KeySchema:
        - AttributeName: Service
          KeyType: HASH
        - AttributeName: FeedbackId
          KeyType: RANGE
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5
